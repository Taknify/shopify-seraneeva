<!-- /sections/customer-login.liquid -->
<style>
  @media only screen and (min-width: 768px) {
    form#customer_login, form[action="/account/recover"] {
      width: 360px !important;
    }
    #CustomerLoginForm, #RecoverPasswordForm .form-vertical {
      display: flex;
      justify-content: center;
    }
  }
  .field {
    position: relative;
  }
  #customer_login .hidden-label {
    overflow: initial !important;
    clip: unset !important;
  }
  .field:has(input:placeholder-shown) > label {
    top: 24%;
    left: 4.5%;
    margin-bottom: 0;
    transition: all .2s cubic-bezier(.5,0,0,1);
  }
  .field input::placeholder {
    color: transparent !important;
  }
  .field:has(input:focus) > label,
  .field:has(input:not(:placeholder-shown)) > label {
    top: 2%;
    left: 2%;
    transform: scale(0.8) !important;
  }
  .field input {
    padding-top: 16px !important;
  }
  .custom-login-error-message {
    color: rgb(236, 113, 107);
    font-size: 12px;
    font-weight: 400;
    line-height: 16px;
    position: absolute;
    left: 0;
    top: 3.5rem;
  }
  .incorrect-credentials .errors {
    position: absolute !important;
    top: -1rem !important;
    background-color: unset !important;
    border: none !important;
    padding: unset !important;
  }
  .incorrect-recovery .errors {
    position: absolute !important;
    bottom: 5rem !important;
    background-color: unset !important;
    border: none !important;
    padding: unset !important;
  }
  #RecoverPasswordForm .custom-login-error-message {
    background-color: unset !important;
    border: none !important;
    padding: unset !important;
    position: unset !important;
    font-size: 12px;
    display: block !important;
    margin-top: -1rem;
    margin-bottom: 1rem;
    text-align: left;
  }
  .form-success {
    background-color: unset !important;
    border: none !important;
    padding: unset !important;
    margin-bottom: unset !important;
    margin-top: unset !important;
  }
</style>

<div class="wrapper-spacing--v--template wrapper-spacing--h">
  <div class="grid page-main--wrapper">
    <div class="grid__item grid__item--customer-accounts large--one-third push--large--one-third text-center">
      <div class="note form-success" id="ResetSuccess" style="display:none;">
        {{ 'customer.recover_password.success' | t }}
      </div>

      <div id="CustomerLoginForm" class="form-vertical">
        {% form 'customer_login' %}
          <div class="template-title--wrapper">
            <h1 class="page--title template-title">{{ 'customer.login.title' | t }}</h1>
          </div>
      
          <div class="field">
            <label for="CustomerEmail" class="hidden-label">{{ 'customer.login.email' | t }}</label>
            <input type="email" name="customer[email]" id="CustomerEmail" class="input-full{% if form.errors contains 'email' %} error{% endif %}" placeholder="{{ 'customer.login.email' | t }}" autocorrect="off" autocapitalize="off" ref="customerEmail" autofocus>
          </div>
          
          {% if form.password_needed %}
            <div class="field">
              <label for="CustomerPassword" class="hidden-label">{{ 'customer.login.password' | t }}</label>
              <input type="password" value="" name="customer[password]" id="CustomerPassword" class="input-full{% if form.errors contains 'password' %} error{% endif %}" placeholder="{{ 'customer.login.password' | t }}">
            </div>
          {% endif %}
          {% if form.errors %}
            <div class="incorrect-credentials">
              {{ form.errors | default_errors }}
            </div>
          {% endif %}
          <p>
            <button type="submit" class="btn btn--full account-section--btn">{{ 'customer.login.sign_in' | t }}</button>
          </p>
          <p class="login-form-cancel--wrapper nav-link-animated--custom"><a href="{{ routes.root_url }}" class="login-form-cancel animated-link--item">{{ 'customer.login.cancel' | t }}</a></p>
          <p class="register-link--wrapper">{{ 'layout.customer.create_account' | t | customer_register_link }}</p>
          {% if form.password_needed %}
            <p class="forgot-password--wrapper nav-link-animated--custom"><a class="animated-link--item" href="#recover" id="RecoverPassword">{{ 'customer.login.forgot_password' | t }}</a></p>
          {% endif %}
        {% endform %}
      </div>

      <div id="RecoverPasswordForm" style="display: none;">
        <div class="sitewide--title-wrapper">
          <h2 class="page--title">{{ 'customer.recover_password.title' | t }}</h2>
        </div>
        
        <p>{{ 'customer.recover_password.subtext' | t }}</p>

        <div class="form-vertical">
          {% form 'recover_customer_password' %}

            <label for="RecoverEmail" class="hidden-label">{{ 'customer.recover_password.email' | t }}</label>
            <input type="email" value="" name="email" id="RecoverEmail" class="input-full" placeholder="{{ 'customer.recover_password.email' | t }}" autocorrect="off" autocapitalize="off">

            <p>
              <button type="submit" class="btn btn--full account-section--btn">{{ 'customer.recover_password.submit' | t }}</button>
            </p>
            <p class="recover-password-cancel--wrapper nav-link-animated--custom">
              <a tabindex="0" id="HideRecoverPasswordLink" class="text-link animated-link--item">{{ 'customer.recover_password.cancel' | t }}</a>
            </p>
            <p id="EmailExistsError" class="custom-login-error-message"></p>
          {% endform %}
        </div>
      </div>

      {% if shop.checkout.guest_login %}
        <hr>
        <h2>{{ 'customer.login.guest_title' | t }}</h2>
        {% form 'guest_login' %}
          <button type="submit" class="btn">{{ 'customer.login.guest_continue' | t }}</button>
        {% endform %}
      {% endif %}
    </div>
  </div>
</div>

<script>
  const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

  document.addEventListener("DOMContentLoaded", (event) => {
    // Login Form
    let emailField = document.getElementById('CustomerEmail');
    let passwordField = document.getElementById('CustomerPassword');
    let loginForm = document.querySelector("#CustomerLoginForm form");
    let submitButton = loginForm.querySelector("button[type='submit']");

    function displayError(message, element) {
      let existingError = element.nextElementSibling;
      if (existingError && existingError.classList.contains('custom-login-error-message')) {
        existingError.remove();
      }
      if (message) {
        element.insertAdjacentHTML("afterend", `<span class="custom-login-error-message">${message}</span>`);
        return false;
      }
      return true;
    }

    function checkEmailValidity() {
      let emailValue = emailField.value;
      let errorMessage = emailValue ? (emailRegex.test(emailValue) ? '' : 'Please enter a valid email address.') : 'Email is required.';
      return displayError(errorMessage, emailField);
    }

    function checkPasswordValidity() {
      let passwordValue = passwordField.value;
      let errorMessage = passwordValue ? '' : 'Password is required.';
      return displayError(errorMessage, passwordField);
    }

    emailField.addEventListener("input", checkEmailValidity);
    passwordField.addEventListener("input", checkPasswordValidity);

    loginForm.addEventListener("submit", (e) => {
      let isEmailValid = checkEmailValidity();
      let isPasswordValid = checkPasswordValidity();
      if (!isEmailValid || !isPasswordValid) {
        e.preventDefault();
      }
    });

    submitButton.addEventListener("click", (e) => {
      let isEmailValid = checkEmailValidity();
      let isPasswordValid = checkPasswordValidity();
      if (!isEmailValid || !isPasswordValid) {
        e.preventDefault();
      }
    });

    // Recover Password Form
    let recoverEmailField = document.getElementById('RecoverEmail');
    let recoverForm = document.querySelector("#RecoverPasswordForm form");
    let recoverSubmitButton = recoverForm.querySelector("button[type='submit']");

    function checkRecoverEmailValidity() {
      let emailValue = recoverEmailField.value;
      let errorMessage = emailValue ? (emailRegex.test(emailValue) ? '' : 'Please enter a valid email address.') : 'Email is required.';
      return displayError(errorMessage, recoverEmailField);
    }

    recoverEmailField.addEventListener("input", checkRecoverEmailValidity);

    recoverForm.addEventListener("submit", (e) => {
      if (!checkRecoverEmailValidity()) {
        e.preventDefault();
      }
    });

    recoverSubmitButton.addEventListener("click", (e) => {
      if (!checkRecoverEmailValidity()) {
        e.preventDefault();
      }
    });

    document.querySelector("#RecoverPassword").addEventListener("click", (e) => {
      e.preventDefault();
      document.getElementById('CustomerLoginForm').style.display = 'none';
      document.getElementById('RecoverPasswordForm').style.display = 'block';
    });

    document.querySelector("#HideRecoverPasswordLink").addEventListener("click", (e) => {
      e.preventDefault();
      document.getElementById('CustomerLoginForm').style.display = 'block';
      document.getElementById('RecoverPasswordForm').style.display = 'none';
    });
  });
</script>

{% schema %}
{
  "name": "t:sections.customer-login.name",
  "settings": [

  ]
}
{% endschema %}